@model PaymentGateway.Models.TransactionViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    ViewBag.Title = "Data Table";
}
<style>
    .custom-post-btn {
        background-color: red;
        color: white; /* Set the text color to contrast with the background */
    }

</style>


<script>
$(document).ready(function(){
  $("#transaction").on("keyup", function() {
    var value = $(this).val().toLowerCase();
    $("#id").filter(function() {
      $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    });
  });
});
</script>
<a class="btn btn-success" style="margin-bottom:10px" href="/Transactions/Transaction"><i class="fa fa-plus"></i> Add New</a>
<h2>Data Table </h2>
<table id="dataTable" class="table table-bordered table-striped"> </table>

<div class="modal fade" id="transactionDetailsModal" tabindex="-1" role="dialog" aria-labelledby="transactionDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transactionDetailsModalLabel">Transaction Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="transactionDetailsContent">
            
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="paymentDetailsModal" tabindex="-1" role="dialog" aria-labelledby="paymentDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentDetailsModalLabel">Payment Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="paymentDetailsModalBody">
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script>
       
        $(document).ready(function () {
            console.log('Document is ready.');
            var postedTransactionIds = Object.keys(localStorage).filter(function (key) {
                return key.startsWith('postedTransactionId_');
            });


            console.log('Posted transaction IDs:', postedTransactionIds);
            // Loop through posted transaction IDs and update button appearance
            postedTransactionIds.forEach(function (key) {
                var id = key.replace('postedTransactionId_', '');
                var postButton = $('[data-transaction-id="' + id + '"]');
                postButton.prop('disabled', true);
                postButton.removeClass('btn-primary').addClass('custom-post-btn');
                postButton.text('Posted');
            });

           
            $('#dataTable').DataTable({
                "ajax": {
                    url: '/Transactions/DisplayDataToDataTable',
                    type: 'POST',
                    datatype: 'JSON',
                    dataSrc:""
                },
               
                "columns": [
                    { "targets": 0, "data": "id", "title": "ID" },
                    { "targets": 1, "data": "sender.name", "title": "Sender Name" },
                    { "targets": 2, "data": "sender.iD_NO", "title": "Sender ID NO" },
                    { "targets": 3, "data": "sender.phone_No", "title": "Sender Phone NO" },
                    { "targets": 4, "data": "sender.src_Account", "title": "Sender Source Account" },
                    { "targets": 5, "data": "receiver.name", "title": "Receiver Name" },
                    { "targets": 6, "data": "receiver.iD_NO", "title": "Receiver ID NO" },
                    { "targets": 7, "data": "receiver.phone_No", "title": "Receiver Phone NO" },
                    { "targets": 8, "data": "receiver.dst_Account", "title": "Receiver Destination Account" },
                    { "targets": 9, "data": "amount", "title": "Amount" },
                    { "targets": 10, "data": "routeId", "title": "Category ID" },
                    { "targets": 11, "data": "categoryDescription", "title": "Category Description" },
                    { "targets": 12, "data": "channelType", "title": "Channel ID" },
                    { "targets": 13, "data": "channelDescription", "title": "Channel Description" },
                    { "targets": 14, "data": "reference", "title": "Reference" },
                    { "targets": 15, "data": "date", "title": "Transaction Date" },
                    { "targets": 16, "data": "transactionStatusDescription", "title": "Status " },
                    { "targets": 17, "data": "transactionStatus", "title": "Status ID" },
                    { "targets": 18, "data": "createdBy", "title": "Created By" },
                    { "targets": 19, "data": "isPosted", "title": "Posted" },
                    { "targets": 20, "data": "date", "title": "Post" },
                    { "targets": 21, "data": "date", "title": "View" }

                    
                    
                ],


                       
                "columnDefs": [
                    { "targets": [0], "visible": false },
                    { "targets": [10], "visible": false },
                    { "targets": [12], "visible": false },
                    { "targets": [17], "visible": false }



                ],
                "order": [[0, "desc"]],

                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                   
                    var id = aData.id;
                    var originatorConversationId = aData.originatorConversationId;

                    var postButton = '<button class="btn btn-primary post-btn" data-transaction-id="' + aData.id + '" data-originator-conversation-id="' + aData.originatorConversationId + '">Post</button>';
                    //var viewButton = '<button class="btn btn-info view-btn" data-transaction-id="' + aData.id + '" data-originator-conversation-id="' + aData.originatorConversationId + '">View</button>';

                   // var statusButton = '<button class="btn btn-info status-btn" data-transaction-id="' + aData.id + '" data-originator-conversation-id="' + aData.originatorConversationId + '">Status</button>';

                    var statusLink = '<a class="status-link" href="#" data-transaction-id="' + id + '" data-originator-conversation-id="' + originatorConversationId + '">Payment</a>';
                    var viewLink = '<a class="view-link" href="#" data-transaction-id="' + id + '" data-originator-conversation-id="' + originatorConversationId + '">Transaction</a>';



                    $(nRow).find('td:eq(16)').html(postButton);
                    $(nRow).find('td:eq(17)').html(viewLink + ' ' + statusLink);

                  
                    var formattedAmount = parseFloat(aData.amount).toLocaleString(undefined, {
                       minimumFractionDigits: 2,
                       maximumFractionDigits: 2
                    });
                   

                    var dateParts = aData.date.split('T');
                    var dateComponents = dateParts[0].split('-');
                    var formattedDate = dateComponents[2] + '/' + dateComponents[1] + '/' + dateComponents[0];
                    var timeParts = dateParts[1].split(':');
                    var formattedTime = timeParts[0] + ':' + timeParts[1] + ':' + timeParts[2].substr(0, 2); // Extract HH:mm:ss format


                    $(nRow).find('td:eq(18)').text(transactionStatus);
                    var transactionStatus = aData.transactionStatus;

                    var transactionStatusDescriptionCell = $(nRow).find('td:eq(13)');
                    switch (transactionStatus) {
                        case 0:
                            transactionStatusDescriptionCell.css('background-color', '#FFCCCC');
                            break;
                        case 1:
                            transactionStatusDescriptionCell.css('background-color', '#FFCCCC');
                            break;

                        case 2:
                            transactionStatusDescriptionCell.css('background-color', 'lightblue');
                            transactionStatusDescriptionCell.css('color', 'black');
                            break;

                        case 3:
                            transactionStatusDescriptionCell.css('background-color', 'yellow');
                            break;

                        case 4:
                            transactionStatusDescriptionCell.css('background-color', '#C7F6B6');
                            transactionStatusDescriptionCell.css('color', 'black');
                            break;

                        case 5:
                            transactionStatusDescriptionCell.css('background-color', '#FFCCCC');
                            break;
                        case 6:
                            transactionStatusDescriptionCell.css('background-color', '#FF6666');
                            transactionStatusDescriptionCell.css('color', 'black');
                            break;
                        case 7:
                            transactionStatusDescriptionCell.css('background-color', '#FFCCCC');
                            break;
                        case 8:
                            transactionStatusDescriptionCell.css('background-color', '#E3BC9A');
                            transactionStatusDescriptionCell.css('color', 'black');
                            break;
                        default:
                            
                            break;
                    }


                    //if (transactionStatus === 0 || transactionStatus === 1) {
                    //    transactionStatusDescriptionCell.css('background-color', '#FFCCCC');
                    //} else if (transactionStatus === 2) {
                    //    transactionStatusDescriptionCell.css('background-color', 'lightblue');
                    //    transactionStatusDescriptionCell.css('color', 'white');
                    //} else if (transactionStatus === 3) {
                    //    transactionStatusDescriptionCell.css('background-color', 'yellow');
                    //} else if (transactionStatus === 4) {
                    //    transactionStatusDescriptionCell.css('background-color', '#D9E3DA');
                    //    transactionStatusDescriptionCell.css('color', 'white');
                    //} else if (transactionStatus >= 5 && transactionStatus <= 8) {
                    //    transactionStatusDescriptionCell.css('background-color', '#E3BC9A');
                    //    transactionStatusDescriptionCell.css('color', 'white');
                    //}
                   



                    $(nRow).find('td:eq(8)').text(formattedAmount);
                    $(nRow).find('td:eq(12)').html(formattedTime + '<br>' + formattedDate);


                   // $(nRow).find('td:eq(16)').html(statusLink);

                    var isPostedCell = $(nRow).find('td:eq(15)');
                    if (aData.isPosted) {
                        isPostedCell.text('Posted');
                    } else {
                        isPostedCell.text('Not posted'); 
                    }
                    return nRow;
                   
                }
               
            });


            $('#dataTable').on('click', '.post-btn', function () {
                var postButton = $(this);
                var id = postButton.data('transaction-id');
                var originatorConversationId = postButton.data('originator-conversation-id');
                var rowNode = postButton.closest('tr'); 

                $.ajax({
                    url: '/Transactions/PaymentOrderRequest',
                    type: 'POST',
                    data: { id: id, originatorConversationId: originatorConversationId },
                    success: function (response) {
                        if (response.isTransactionPosted) {
                           

                           
                            postButton.prop('disabled', true);
                            postButton.removeClass('btn-primary').addClass('custom-post-btn');
                            postButton.text('Post');
                           // postButton.css('background-color', 'grey');
                            console.log('Button class and text changed.');

                           
                            alert('Transaction already posted.');

                            localStorage.setItem('postedTransactionId_' + id, 'posted');

                        } else if (response.isPosted) {
                          

                            postButton.prop('disabled', true);
                            postButton.removeClass('btn-primary').addClass('custom-post-btn');
                            postButton.text('Posted');
                          //  postButton.css('background-color', 'grey');
                            console.log('Button class and text changed.');
                            alert('Transaction posted successfully!');

                            localStorage.setItem('postedTransactionId_' + id, 'posted');

                        } else {
                            alert('Failed to post the transaction. Please try again.');
                        }

                       
                        $('#dataTable').DataTable().ajax.reload();
                    },
                    error: function (error) {
                        alert('Failed to post the transaction. Please try again.');
                    }
                });
            });

            $('#dataTable').on('click', '.view-link', function () {
              console.log('Button Clicked');
                var viewLink = $(this);
                var id = viewLink.data('transaction-id');

                $.ajax({
                    url: '/Transactions/ViewPaymentDetails',
                    type: 'GET',
                    dataSrc: "",
                    data: { id: id },
                    dataType: 'html',


                    success: function (response) {
                      
                        $('#transactionDetailsContent').html(response);
                        $('#transactionDetailsModal').modal('show');

                        $('#closeButton').on('click', function () {
                            $('#transactionDetailsModal').modal('hide');
                        });

                    },
                    error: function (error) {
                        alert('Failed to fetch transaction details. Please try again.');
                    }
                });
            });

            $('#dataTable').on('click', '.status-link', function () {
               
                var link = $(this);
                var originatorConversationId = link.data('originator-conversation-id');

                $.ajax({
                    url: '/Transactions/GetPaymentDetailsByOriginatorConversationId',
                    type: 'GET',
                    dataSrc: "",
                    dataType: 'HTML',
                    data: { originatorConversationId: originatorConversationId },
                    success: function (paymentDetails) {

                        if (paymentDetails.includes('Transaction is not posted')) {
                            alert('Transaction not is posted.');
                        } else {

                        $('#paymentDetailsModalBody').html(paymentDetails);
                        $('#paymentDetailsModal').modal('show');

                        $('#closeButton').on('click', function () {
                            $('#paymentDetailsModal').modal('hide');
                        });
                        }
                    },
                    error: function (error) {
                        alert('Failed to fetch payment details. Please try again.');
                    }
                });
            });
        

          
    });
    
  </script>
    
}